{"version":3,"sources":["meteor://ðŸ’»app/imports/api/profile/Profile.js","meteor://ðŸ’»app/imports/api/reference/Reference.js","meteor://ðŸ’»app/imports/api/report/Report.js","meteor://ðŸ’»app/imports/startup/server/Accounts.js","meteor://ðŸ’»app/imports/startup/server/Mongo.js","meteor://ðŸ’»app/imports/startup/server/Publications.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Profiles","Mongo","link","v","SimpleSchema","default","ProfilesCollection","constructor","name","collection","Collection","schema","image","type","String","optional","firstName","lastName","email","bio","interests","attachSchema","userPublicationName","concat","adminPublicationName","References","ReferencesCollection","pestName","sciName","risk","regStatus","pestType","allowedValues","description","impact","distribution","lookalike","Reports","ReportsCollection","pestDescription","island","location","date","Date","reporter","verified","defaultValue","removed","userVerifiedPosts","adminAllPosts","userSpecificPosts","adminUnverifiedPosts","Meteor","Accounts","Roles","createUser","password","role","console","log","userID","username","createRole","unlessExists","addUsersToRoles","users","find","count","settings","defaultAccounts","forEach","_ref","addReference","data","insert","referenceData","addReport","reportData","addProfile","profileData","publish","userId","ready","findOne","userIsInRole","roleAssignment"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\n/**\n * The ProfilesCollection. It encapsulates state and variable values for Profile.\n */\nclass ProfilesCollection {\n  constructor() {\n    // The name of this collection.\n    this.name = 'ProfilesCollection';\n    // Define the Mongo collection.\n    this.collection = new Mongo.Collection(this.name);\n    // Define the structure of each document in the collection.\n    this.schema = new SimpleSchema({\n      image: {\n        type: String,\n        optional: true,\n      },\n      firstName: String,\n      lastName: String,\n      email: String,\n      bio: {\n        type: String,\n        optional: true,\n      },\n      interests: {\n        type: String,\n        optional: true,\n      },\n      type: {\n        type: String,\n        optional: true,\n      },\n    });\n    // Attach the schema to the collection, so all attempts to insert a document are checked against schema.\n    this.collection.attachSchema(this.schema);\n    // Define names for publications and subscriptions\n    this.userPublicationName = `${this.name}.publication.user`;\n    this.adminPublicationName = `${this.name}.publication.admin`;\n  }\n}\n\n/**\n * The singleton instance of the ProfilesCollection.\n * @type {ProfilesCollection}\n */\nexport const Profiles = new ProfilesCollection();\n","import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\n/**\n * The ReferencesCollection. It encapsulates state and variable values for a reference guide entry.\n */\nclass ReferencesCollection {\n  constructor() {\n    // The name of this collection.\n    this.name = 'ReferencesCollection';\n    // Define the Mongo collection.\n    this.collection = new Mongo.Collection(this.name);\n    // Define the structure of each document in the collection.\n    this.schema = new SimpleSchema({\n      image: String,\n      pestName: String,\n      sciName: String,\n      risk: String,\n      regStatus: String,\n      pestType: {\n        type: String,\n        allowedValues: ['Plant', 'Animal', 'Bug', 'Microbe', 'Fungus'],\n      },\n      description: String,\n      impact: String,\n      distribution: String,\n      lookalike: String,\n    });\n    // Attach the schema to the collection, so all attempts to insert a document are checked against schema.\n    this.collection.attachSchema(this.schema);\n    // Define names for publications and subscriptions\n    this.userPublicationName = `${this.name}.publication.user`;\n    this.adminPublicationName = `${this.name}.publication.admin`;\n  }\n}\n\n/**\n * The singleton instance of the ReferencesCollection.\n * @type {ReferencesCollection}\n */\nexport const References = new ReferencesCollection();\n","import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\n/**\n * The ReportsCollection. It encapsulates state and variable values for a report.\n */\nclass ReportsCollection {\n  constructor() {\n    // The name of this collection.\n    this.name = 'ReportsCollection';\n    // Define the Mongo collection.\n    this.collection = new Mongo.Collection(this.name);\n    // Define the structure of each document in the collection.\n    this.schema = new SimpleSchema({\n      image: String,\n      pestName: String,\n      pestDescription: String,\n      island: {\n        type: String,\n        allowedValues: ['Niihau', 'Kauai', 'Oahu', 'Molokai', 'Lanai', 'Maui', 'Kahoolawe', 'Hawaii'],\n      },\n      location: String,\n      date: Date,\n      reporter: String,\n      verified: {\n        type: String,\n        allowedValues: ['No', 'Yes'],\n        defaultValue: 'No',\n      },\n      removed: {\n        type: String,\n        allowedValues: ['No', 'Yes'],\n        defaultValue: 'No',\n      },\n    });\n    // Attach the schema to the collection, so all attempts to insert a document are checked against schema.\n    this.collection.attachSchema(this.schema);\n    // Define names for publications and subscriptions\n    this.userVerifiedPosts = `${this.name}.publication.user`;\n    this.adminAllPosts = `${this.name}.publication.admin`;\n    this.userSpecificPosts = `${this.name}.publication.userSpecific`;\n    this.adminUnverifiedPosts = `${this.name}.publication.adminUnverified`;\n  }\n}\n\n/**\n * The singleton instance of the ReportsCollection.\n * @type {ReportsCollection}\n */\nexport const Reports = new ReportsCollection();\n","import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\n\n/* eslint-disable no-console */\n\n// Creates user\nconst createUser = (email, password, role) => {\n  console.log(`  Creating user ${email}.`);\n  const userID = Accounts.createUser({\n    username: email,\n    email: email,\n    password: password,\n  });\n  if (role === 'admin') {\n    Roles.createRole(role, { unlessExists: true });\n    Roles.addUsersToRoles(userID, 'admin');\n  }\n};\n\n// When running app for first time, pass a settings file to set up a default user account.\nif (Meteor.users.find().count() === 0) {\n  if (Meteor.settings.defaultAccounts) {\n    console.log('Creating the default user(s)');\n    Meteor.settings.defaultAccounts.forEach(({ email, password, role }) => {\n      createUser(email, password, role);\n    });\n  } else {\n    console.log('Cannot initialize the database!  Please invoke meteor with a settings file.');\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport { Reports } from '../../api/report/Report.js';\nimport { References } from '../../api/reference/Reference.js';\nimport { Profiles } from '../../api/profile/Profile';\n/* eslint-disable no-console */\n\n// Initialize ReferencesCollection default data\nconst addReference = (data) => {\n  console.log(`  Adding: ${data.pestName} `);\n  References.collection.insert(data);\n};\n\nif (References.collection.find().count() === 0) {\n  if (Meteor.settings.referenceData) {\n    console.log('Creating default reference data.');\n    Meteor.settings.referenceData.forEach(data => addReference(data));\n  }\n}\n\n// Initialize ReportsCollection default data\nconst addReport = (data) => {\n  console.log(`  Adding: ${data.pestName} (${data.reporter}, ${data.date}) `);\n  Reports.collection.insert(data);\n};\n\nif (Reports.collection.find().count() === 0) {\n  if (Meteor.settings.reportData) {\n    console.log('Creating default report data.');\n    Meteor.settings.reportData.forEach(data => addReport(data));\n  }\n}\n\nconst addProfile = (data) => {\n  console.log(`  Adding: ${data.lastName}, ${data.email} `);\n  Profiles.collection.insert(data);\n};\n\nif (Profiles.collection.find().count() === 0) {\n  if (Meteor.settings.profileData) {\n    console.log('Creating default profile data.');\n    Meteor.settings.profileData.forEach(data => addProfile(data));\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport { Roles } from 'meteor/alanning:roles';\nimport { Reports } from '../../api/report/Report';\nimport { Profiles } from '../../api/profile/Profile';\nimport { References } from '../../api/reference/Reference';\n\n// User-level publication.\n// If logged in, then publish documents that are verified. Otherwise, publish nothing.\nMeteor.publish(Reports.userVerifiedPosts, function () {\n  if (this.userId) {\n    return Reports.collection.find({ verified: 'Yes' });\n  }\n  return this.ready();\n});\n\n// when PostsButton is clicked\n// If logged in will only display reports made by the user\nMeteor.publish(Reports.userSpecificPosts, function () {\n  if (this.userId) {\n    const username = Meteor.users.findOne(this.userId).username;\n    return Reports.collection.find({ reporter: username });\n  }\n  return this.ready();\n});\n\n// Admin-level publication.\n// If logged in and with admin role, then publish all documents from all users. Otherwise, publish nothing.\nMeteor.publish(Reports.adminAllPosts, function () {\n  if (this.userId && Roles.userIsInRole(this.userId, 'admin')) {\n    return Reports.collection.find();\n  }\n  return this.ready();\n});\n\n// when AdminButton is clicked\n// if logged in and with admin role, then displays only unverified posts\nMeteor.publish(Reports.adminUnverifiedPosts, function () {\n  if (this.userId && Roles.userIsInRole(this.userId, 'admin')) {\n    return Reports.collection.find({ verified: 'No' });\n  }\n  return this.ready();\n});\n\nMeteor.publish(Profiles.userPublicationName, function () {\n  return Profiles.collection.find({});\n});\n\nMeteor.publish(Profiles.adminPublicationName, function () {\n  if (this.userId && Roles.userIsInRole(this.userId, 'admin')) {\n    return Profiles.collection.find();\n  }\n  return this.ready();\n});\n\n// alanning:roles publication\n// Recommended code to publish roles for each user.\nMeteor.publish(null, function () {\n  if (this.userId) {\n    return Meteor.roleAssignment.find({ 'user._id': this.userId });\n  }\n  return this.ready();\n});\n\n// Published all references to appear to Resources page\nMeteor.publish(References.userPublicationName, function () {\n  return References.collection.find();\n});\n","import '/imports/startup/server/Accounts';\nimport '/imports/startup/server/Publications';\nimport '/imports/startup/server/Mongo';\n"]}